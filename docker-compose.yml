version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: easyfiler-postgres
    environment:
      POSTGRES_DB: easyfiler_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./tools/docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - easyfiler-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: easyfiler-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - easyfiler-network
    command: redis-server --appendonly yes

  # MinIO (S3-compatible storage for development)
  minio:
    image: minio/minio:latest
    container_name: easyfiler-minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - minio_data:/data
    networks:
      - easyfiler-network
    command: server /data --console-address ":9001"

  # pgAdmin (PostgreSQL management)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: easyfiler-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@easyfiler.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - easyfiler-network
    depends_on:
      - postgres

  # Redis Commander (Redis management)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: easyfiler-redis-commander
    environment:
      REDIS_HOSTS: "local:redis:6379"
    ports:
      - "8081:8081"
    networks:
      - easyfiler-network
    depends_on:
      - redis

volumes:
  postgres_data:
  redis_data:
  minio_data:
  pgadmin_data:

networks:
  easyfiler-network:
    driver: bridge